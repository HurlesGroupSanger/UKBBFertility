package cnvqc.merger;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.cli.BasicParser;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;

public class CNVMergerOptions {

	private Options options;
	
	private File rawCNVs;
	private File output;
	private File tmpDirectory;
	private File fastaRef;
	private File fastaIndex;
	private File sampleFile;
	
	public CNVMergerOptions (String args[]) {
		
		options = setOptions();
		loadOptions(args);
		
	}
		
	public File getRawCNVs() {
		return rawCNVs;
	}
	public File getOutput() {
		return output;
	}
	public File getTmpDirectory() {
		return tmpDirectory;
	}
	public File getFastaRef() {
		return fastaRef;
	}
	public File getFastaIndex() {
		return fastaIndex;
	}
	public File getSampleFile() {
		return sampleFile;
	}
	
	private Options setOptions() {
		
		List<Option> optionsList = new ArrayList<Option>();
		Options options = new Options();
		
		optionsList.add(new Option("p", true, "Path to CNVs generated by \'Polish\'."));
		optionsList.add(new Option("o", true, "Path to output file."));
		optionsList.add(new Option("h", true, "Fasta reference file."));
		optionsList.add(new Option("samples", true, "Samples list file."));

		for (Option opt : optionsList) {
			opt.setRequired(true);
			options.addOption(opt);
		}
		
		options.addOption(new Option("help", false, "Print help message."));
		options.addOption(new Option("tmp", true, "Path to tmp directory."));
		
		return options;
		
	}
	
	private void loadOptions(String args[]) {
		
		CommandLineParser parser = new BasicParser();
		CommandLine cmd = null;
				
		try {
			 cmd = parser.parse(options, args);
		} catch (org.apache.commons.cli.ParseException e) {
			System.out.println();
			ThrowHelp(e.getMessage());
		}
			
		if (cmd.hasOption("help")) {
			ThrowHelp("");
		}
		
		rawCNVs = new File(cmd.getOptionValue("p"));
		output = new File(cmd.getOptionValue("o"));
		sampleFile = new File(cmd.getOptionValue("samples"));

		if (cmd.hasOption("tmp")) {
			tmpDirectory = new File(cmd.getOptionValue("tmp"));
		} else {
			tmpDirectory = new File(System.getProperty("java.io.tmpdir"));
			System.out.println(tmpDirectory.getAbsolutePath());
		}
		fastaRef = new File(cmd.getOptionValue("h"));
		fastaIndex = new File(fastaRef.getAbsolutePath() + ".fai");
		
	}
	
	private void ThrowHelp(String top) {
		String header = "Axiom Array CNV Annotator\n\n\n";
		String footer = "\n\n(c) Eugene Gardner 2019";
		String usage = "java -jar CNVAnnotator.jar Merge <options>";
		System.out.println();
		System.out.println(top);
		HelpFormatter formatter = new HelpFormatter();
		System.out.println();
		formatter.printHelp(9999, usage, header, options, footer);
		System.exit(1);
	}
	
}
